abstemp = mean(AbsTemp, na.rm = TRUE))
View(dataav)
View(dataavs)
View(datagp)
pfvp = ggplot(data = datagp, aes(x = Day, y = fvfm, color = Treatment)) +
geom_errorbar(aes(ymin = (fvfm - fvfmsd), ymax = (fvfm + fvfmsd)),
color = 'gray', size = 0.3, width = 0.2) +
geom_errorbar(data = dataavs, aes(ymin = (fvfm - fvfmsd), ymax = (fvfm + fvfmsd)),
color = 'gray', size = 0.3, width = 0.2) +
geom_point(size = 2, aes(color = Treatment)) +
geom_line(size = 1, aes(color = Treatment)) +
geom_point(data = dataavs, aes(x = Day, y = fvfm, color = TreatSite), size = 2) +
geom_line(data = dataavs, aes(x = Day, y = fvfm, color = TreatSite, linetype = Site), size = 1) +
ylab("Fv/Fm") +
ggtitle("Porites") +
scale_x_continuous(breaks = (by = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14))) +
scale_color_manual(name = "Ramp/Temp", labels = c("Control 32", "Fast 33.5", "Slow 33.5", "Fast 35 Exposed", "Fast 35 Protected", "Slow 35", "Fast 36.5 Exposed","Fast 36.5 Protected", "Slow 36.5"), values=c("#000080", "#00700A", "#00E109", "#CDAD00", "#CDAD00", "#CD6600", "#FF0000", "#FF0000", "#8B0000")) +
scale_linetype_manual(values = c(3,6)) +
theme_classic() +
geom_text(aes(x = 5, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 7, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 8, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 9, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 10, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 11, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 12, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 13, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 14, y = .7), label = "*", size = 5, color = "#00700A") +
geom_text(aes(x = 9, y = .72), label = "*", size = 5, color = "#00E109") +
geom_text(aes(x = 10, y = .72), label = "*", size = 5, color = "#00E109") +
geom_text(aes(x = 11, y = .72), label = "*", size = 5, color = "#00E109") +
geom_text(aes(x = 12, y = .72), label = "*", size = 5, color = "#00E109") +
geom_text(aes(x = 13, y = .72), label = "*", size = 5, color = "#00E109") +
geom_text(aes(x = 14, y = .72), label = "*", size = 5, color = "#00E109") +
geom_text(aes(x = 3, y = .74), label = "*", size = 5, color = "#CDAD00") +
geom_text(aes(x = 4, y = .74), label = "*", size = 5, color = "#CDAD00") +
geom_text(aes(x = 5, y = .74), label = "*", size = 5, color = "#CDAD00") +
geom_text(aes(x = 6, y = .74), label = "*", size = 5, color = "#CDAD00") +
geom_text(aes(x = 5, y = .76), label = "*", size = 5, color = "#CD6600") +
geom_text(aes(x = 6, y = .76), label = "*", size = 5, color = "#CD6600") +
geom_text(aes(x = 7, y = .76), label = "*", size = 5, color = "#CD6600") +
geom_text(aes(x = 8, y = .76), label = "*", size = 5, color = "#CD6600") +
geom_text(aes(x = 3, y = .78), label = "*", size = 5, color = "#FF0000") +
geom_text(aes(x = 4, y = .78), label = "*", size = 5, color = "#FF0000") +
geom_text(aes(x = 5, y = .78), label = "*", size = 5, color = "#FF0000") +
geom_text(aes(x = 6, y = .78), label = "*", size = 5, color = "#FF0000") +
geom_text(aes(x = 7, y = .8), label = "*", size = 5, color = "#8B0000") +
geom_text(aes(x = 8, y = .8), label = "*", size = 5, color = "#8B0000") +
geom_text(aes(x = 3, y = .05), label = "+", size = 5, color = "#FF0000")
pfvp
#ggsave('FvFm_inside_porites.pdf', width = 7, height = 4, units = 'in', dpi = 'retina', path  = 'C:/Users/tbate/OneDrive/Documents/Lab Data/Red Sea/Plots')
View(datagp)
View(data_group)
data_group = group_by(data, Species, Day, Temp, Ramp)
dataav = summarize(data_group,
fvfm = mean(FvFm, na.rm = TRUE),
fvfmsd = sd(FvFm, na.rm = TRUE),
heat32 = mean(Heatload32, na.rm = TRUE),
heat32sd = sd(Heatload32, na.rm = TRUE),
heat33 = mean(Heatload33, na.rm = TRUE),
heat33sd = sd(Heatload33, na.rm = TRUE),
heat34 = mean(Heatload34, na.rm = TRUE),
heat34sd = sd(Heatload34, na.rm = TRUE),
abstemp = mean(AbsTemp, na.rm = TRUE))
View(dataav)
data = rbind(datap, dataa)
data = data %>%
unite(Treatment, Temp, Ramp, remove = FALSE) %>%
unite(TreatSite, Treatment, Site, remove = FALSE)
data_group = group_by(data, Species, Day, Temp, Ramp)
View(data_group)
View(data)
data_groups = group_by(data, Species, Day, Temp, Ramp, Treatment, TreatSite, Site)
dataavs = summarize(data_groups,
fvfm = mean(FvFm, na.rm = TRUE),
fvfmsd = sd(FvFm, na.rm = TRUE),
heat32 = mean(Heatload32, na.rm = TRUE),
heat32sd = sd(Heatload32, na.rm = TRUE),
heat33 = mean(Heatload33, na.rm = TRUE),
heat33sd = sd(Heatload33, na.rm = TRUE),
heat34 = mean(Heatload34, na.rm = TRUE),
heat34sd = sd(Heatload34, na.rm = TRUE),
abstemp = mean(AbsTemp, na.rm = TRUE))
View(dataavs)
datap
data = data %>%
unite(Treatment, Temp, Ramp, remove = FALSE) %>%
unite(TreatSite, Treatment, Site, remove = FALSE)
View(data_group)
View(data_group)
coef(pairs(emmp))
datap = read.csv('pam_prolonged_porites.csv')
datap = datap[complete.cases(datap),]
datagp = datap %>%
unite(Treatment, Ramp, Temp, remove = FALSE) %>%
select(Species, Day, Treatment, Temp, Site, Colony, Rep, FvFm)
setwd("~/Documents/ODU_Post-doc/Writing/KAUST 2019/Heating-Duration-vs-Intensity-vs-RampRate/Figures/Figure 1")
library(dplyr)
datap = read.csv('pam_prolonged_porites.csv')
datap = datap[complete.cases(datap),]
datagp = datap %>%
unite(Treatment, Ramp, Temp, remove = FALSE) %>%
select(Species, Day, Treatment, Temp, Site, Colony, Rep, FvFm)
select <- dplyr::select
datap = read.csv('pam_prolonged_porites.csv')
datap = datap[complete.cases(datap),]
datagp = datap %>%
unite(Treatment, Ramp, Temp, remove = FALSE) %>%
select(Species, Day, Treatment, Temp, Site, Colony, Rep, FvFm)
dataa = read.csv('pam_prolonged_acropora.csv')
dataa = dataa[complete.cases(dataa),]
dataga = dataa %>%
unite(Treatment, Ramp, Temp, remove = FALSE) %>%
select(Species, Day, Treatment, Temp, Site, Colony, Rep, FvFm)
data = rbind(datap, dataa)
data = data %>%
unite(Treatment, Temp, Ramp, remove = FALSE) %>%
unite(TreatSite, Treatment, Site, remove = FALSE)
data_group = group_by(data, Species, Day, Temp, Ramp)
dataav = summarize(data_group,
fvfm = mean(FvFm, na.rm = TRUE),
fvfmsd = sd(FvFm, na.rm = TRUE),
heat32 = mean(Heatload32, na.rm = TRUE),
heat32sd = sd(Heatload32, na.rm = TRUE),
heat33 = mean(Heatload33, na.rm = TRUE),
heat33sd = sd(Heatload33, na.rm = TRUE),
heat34 = mean(Heatload34, na.rm = TRUE),
heat34sd = sd(Heatload34, na.rm = TRUE),
abstemp = mean(AbsTemp, na.rm = TRUE))
View(dataav)
data_group = dplyr::group_by(data, Species, Day, Temp, Ramp)
View(data)
data = rbind(datap, dataa)
data = data %>%
unite(Treatment, Temp, Ramp, remove = FALSE) %>%
unite(TreatSite, Treatment, Site, remove = FALSE)
data_group = group_by(data, Species, Day, Temp, Ramp)
dataav = summarize(data_group,
fvfm = mean(FvFm, na.rm = TRUE),
fvfmsd = sd(FvFm, na.rm = TRUE),
heat32 = mean(Heatload32, na.rm = TRUE),
heat32sd = sd(Heatload32, na.rm = TRUE),
heat33 = mean(Heatload33, na.rm = TRUE),
heat33sd = sd(Heatload33, na.rm = TRUE),
heat34 = mean(Heatload34, na.rm = TRUE),
heat34sd = sd(Heatload34, na.rm = TRUE),
abstemp = mean(AbsTemp, na.rm = TRUE))
data_groups = group_by(data, Species, Day, Temp, Ramp, Treatment, TreatSite, Site)
dataavs = summarize(data_groups,
fvfm = mean(FvFm, na.rm = TRUE),
fvfmsd = sd(FvFm, na.rm = TRUE),
heat32 = mean(Heatload32, na.rm = TRUE),
heat32sd = sd(Heatload32, na.rm = TRUE),
heat33 = mean(Heatload33, na.rm = TRUE),
heat33sd = sd(Heatload33, na.rm = TRUE),
heat34 = mean(Heatload34, na.rm = TRUE),
heat34sd = sd(Heatload34, na.rm = TRUE),
abstemp = mean(AbsTemp, na.rm = TRUE))
dataavs = subset(dataavs, Treatment == '36.5_Fast' | Treatment == '35_Fast')
dataavs = subset(dataavs, Species == 'Porites')
dataav = unite(dataav, Treatment, Temp, Ramp, remove = FALSE)
setwd("~/Documents/ODU_Post-doc/Writing/KAUST 2019/Heating-Duration-vs-Intensity-vs-RampRate/Figures/Figure 4 and 5")
library(emmeans)
library(drc)
library(ggplot2)
library(Rmisc)
#Read in and structure data
Acr_data<-read.csv("2019_08_KAUST_PAM_inside_acropora.csv")
Por_data<-read.csv("2019_08_KAUST_PAM_inside_porites.csv")
#Read in and structure data
Acr_data<-read.csv("2019_08_KAUST_PAM_prolonged_acropora.csv")
Por_data<-read.csv("2019_08_KAUST_PAM_prolonged_porites.csv")
Acr_data$Day<-as.factor(Acr_data$Day)
Acr_data$Day<-as.factor(Acr_data$Day)
Acr_data$Colony<-as.factor(Acr_data$Colony)
Acr_data$Temp<-as.factor(Acr_data$Temp)
Acr_data$Date<-as.factor(Acr_data$Date)
Acr_data$Tank<-as.factor(Acr_data$Tank)
str(Acr_data)
Acr_clean <- subset(Acr_data, select = c(Site, Colony, Population, Ramp, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Acr_clean <- Acr_clean[complete.cases(Acr_clean),]
Acr_pro <- subset(Acr_clean, Site == "Protected")
Acr_exp <- subset(Acr_clean, Site == "Exposed")
Por_data$Day<-as.factor(Por_data$Day)
Por_data$Colony<-as.factor(Por_data$Colony)
Por_data$Temp<-as.factor(Por_data$Temp)
Por_data$Date<-as.factor(Por_data$Date)
Por_data$Tank<-as.factor(Por_data$Tank)
str(Por_data)
Por_clean <- subset(Por_data, select = c(Site, Colony, Population, Ramp, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Por_clean <- Por_clean[complete.cases(Por_clean),]
Por_pro <- subset(Por_clean, Site == "Protected")
Por_exp <- subset(Por_clean, Site == "Exposed")
Full_data<-rbind(Acr_clean,Por_clean)
install.packages(c("MuMIn", "psych"))
Predictors <- Full_data[,c(13:17)]
cor_matrix <-cor(Predictors)
corrplot(cor_matrix)
corrplot.mixed(cor_matrix, upper = 'pie',lower='number')
#Checking for multicollinearity
Predictors <- Full_data[,c(13:17)]
View(Full_data)
#Checking for multicollinearity
Predictors <- Full_data[,c(6:10)]
cor_matrix <-cor(Predictors)
corrplot(cor_matrix)
library(car)
library(corrplot)
library(nlme)
library(plyr)
library(MuMIn)
library(sjPlot)
library(tidyr)
library(AICcmodavg)
library(ggplot2)
library(ggpubr)
corrplot(cor_matrix)
corrplot.mixed(cor_matrix, upper = 'pie',lower='number') #remove heaload 33? Almost perfectly correlated with heatload 32
Main_mod<-nlme::lme(FvFm ~ Heatload33 + Heatload34 + AbsTemp + ElapsedT, random=list(~1|Day,~1|Tank,~1|Colony), data = Full_data, na.action=na.exclude)
summary(Main_mod)
View(Full_data)
View(Acr_data)
Acr_data<-read.csv("2019_08_KAUST_PAM_prolonged_acropora.csv")
Por_data<-read.csv("2019_08_KAUST_PAM_prolonged_porites.csv")
Acr_data$Day<-as.factor(Acr_data$Day)
Acr_data$Colony<-as.factor(Acr_data$Colony)
Acr_data$Temp<-as.factor(Acr_data$Temp)
Acr_data$Date<-as.factor(Acr_data$Date)
Acr_data$Tank<-as.factor(Acr_data$Tank)
str(Acr_data)
Acr_clean <- subset(Acr_data, select = c(Day, Site, Colony, Population, Ramp, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Acr_clean <- Acr_clean[complete.cases(Acr_clean),]
Acr_pro <- subset(Acr_clean, Site == "Protected")
Acr_exp <- subset(Acr_clean, Site == "Exposed")
Por_data$Day<-as.factor(Por_data$Day)
Por_data$Colony<-as.factor(Por_data$Colony)
Por_data$Temp<-as.factor(Por_data$Temp)
Por_data$Date<-as.factor(Por_data$Date)
Por_data$Tank<-as.factor(Por_data$Tank)
str(Por_data)
Por_clean <- subset(Por_data, select = c(Day, Site, Colony, Population, Ramp, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Por_clean <- Por_clean[complete.cases(Por_clean),]
Por_pro <- subset(Por_clean, Site == "Protected")
Por_exp <- subset(Por_clean, Site == "Exposed")
Full_data<-rbind(Acr_clean,Por_clean)
#Model Selection of heating metrics
#Checking for multicollinearity
Predictors <- Full_data[,c(6:10)]
cor_matrix <-cor(Predictors)
corrplot(cor_matrix)
corrplot.mixed(cor_matrix, upper = 'pie',lower='number') #remove heaload 33 - near perfect correlation with heatload 32
#Using VIF to check/account for multicollinearity
Main_mod<-nlme::lme(FvFm ~ Heatload33 + Heatload34 + AbsTemp + ElapsedT, random=list(~1|Day,~1|Tank,~1|Colony), data = Full_data, na.action=na.exclude)
summary(Main_mod)
View(Acr_clean)
View(Acr_data)
View(Acr_data)
Acr_clean <- subset(Acr_data, select = c(Day, Site, Colony, Population, Ramp, Tank, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Acr_clean <- Acr_clean[complete.cases(Acr_clean),]
Acr_pro <- subset(Acr_clean, Site == "Protected")
Acr_exp <- subset(Acr_clean, Site == "Exposed")
Por_data$Day<-as.factor(Por_data$Day)
Por_data$Colony<-as.factor(Por_data$Colony)
Por_data$Temp<-as.factor(Por_data$Temp)
Por_data$Date<-as.factor(Por_data$Date)
Por_data$Tank<-as.factor(Por_data$Tank)
str(Por_data)
Por_clean <- subset(Por_data, select = c(Day, Site, Colony, Population, Ramp, Tank, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Por_clean <- Por_clean[complete.cases(Por_clean),]
Por_pro <- subset(Por_clean, Site == "Protected")
Por_exp <- subset(Por_clean, Site == "Exposed")
Full_data<-rbind(Acr_clean,Por_clean)
#Model Selection of heating metrics
#Checking for multicollinearity
Predictors <- Full_data[,c(6:10)]
cor_matrix <-cor(Predictors)
corrplot(cor_matrix)
corrplot.mixed(cor_matrix, upper = 'pie',lower='number') #remove heaload 33 - near perfect correlation with heatload 32
#Using VIF to check/account for multicollinearity
Main_mod<-nlme::lme(FvFm ~ Heatload33 + Heatload34 + AbsTemp + ElapsedT, random=list(~1|Day,~1|Tank,~1|Colony), data = Full_data, na.action=na.exclude)
summary(Main_mod)
vif.lme <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)] }
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v }
vif.lme(Main_mod)
Main_mod<-nlme::lme(FvFm ~ Heatload32 + Heatload34 + AbsTemp + ElapsedT, random=list(~1|Day,~1|Tank,~1|Colony), data = Full_data, na.action=na.exclude)
summary(Main_mod)
#Use function below to calculate VIF for mixed model such as lme, otherwise can use VIF from car package (see below)
vif.lme <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)] }
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v }
vif.lme(Main_mod) #VIFs all below 3 (acceptable after Neter et al. (1996) and Chatterjee et al. (2000))
Can.mod<-list()
Can.mod[[1]]<-lme(FvFm ~ 1, random=list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[2]]<-lme(FvFm ~ Heatload33, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[3]]<-lme(FvFm ~ Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[4]]<-lme(FvFm ~ AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[5]]<-lme(FvFm ~ ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[6]]<-lme(FvFm ~ Heatload33 + Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[7]]<-lme(FvFm ~ Heatload33 + AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[8]]<-lme(FvFm ~ Heatload33 + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[9]]<-lme(FvFm ~ Heatload34 + AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[10]]<-lme(FvFm ~ Heatload34 + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[11]]<-lme(FvFm ~ AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[12]]<-lme(FvFm ~ Heatload33 + Heatload34 + AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[13]]<-lme(FvFm ~ Heatload33 + Heatload34 + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[14]]<-lme(FvFm ~ Heatload33 + AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[15]]<-lme(FvFm ~ Heatload34 + AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[16]]<-lme(FvFm ~ Heatload33 + Heatload34 + AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
#additive up to here
Can.mod[[17]]<-lme(FvFm ~ Heatload33 * Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[18]]<-lme(FvFm ~ Heatload33 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[19]]<-lme(FvFm ~ Heatload33 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[20]]<-lme(FvFm ~ Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[21]]<-lme(FvFm ~ Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[22]]<-lme(FvFm ~ AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[23]]<-lme(FvFm ~ Heatload33 * Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[24]]<-lme(FvFm ~ Heatload33 * Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[25]]<-lme(FvFm ~ Heatload33 * AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[26]]<-lme(FvFm ~ Heatload33*Heatload34*AbsTemp*ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
aic_out<-aictab(cand.set = Can.mod)
aic_out
Can.mod<-list()
Can.mod[[1]]<-lme(FvFm ~ 1, random=list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[2]]<-lme(FvFm ~ Heatload32, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[3]]<-lme(FvFm ~ Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[4]]<-lme(FvFm ~ AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[5]]<-lme(FvFm ~ ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[6]]<-lme(FvFm ~ Heatload32 + Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[7]]<-lme(FvFm ~ Heatload32 + AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[8]]<-lme(FvFm ~ Heatload32 + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[9]]<-lme(FvFm ~ Heatload34 + AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[10]]<-lme(FvFm ~ Heatload34 + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[11]]<-lme(FvFm ~ AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[12]]<-lme(FvFm ~ Heatload32 + Heatload34 + AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[13]]<-lme(FvFm ~ Heatload32 + Heatload34 + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[14]]<-lme(FvFm ~ Heatload32 + AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[15]]<-lme(FvFm ~ Heatload34 + AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[16]]<-lme(FvFm ~ Heatload32 + Heatload34 + AbsTemp + ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
#additive up to here
Can.mod[[17]]<-lme(FvFm ~ Heatload32 * Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[18]]<-lme(FvFm ~ Heatload32 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[19]]<-lme(FvFm ~ Heatload32 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[20]]<-lme(FvFm ~ Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[21]]<-lme(FvFm ~ Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[22]]<-lme(FvFm ~ AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[23]]<-lme(FvFm ~ Heatload32 * Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[24]]<-lme(FvFm ~ Heatload32 * Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[25]]<-lme(FvFm ~ Heatload32 * AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[26]]<-lme(FvFm ~ Heatload32*Heatload34*AbsTemp*ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
aic_out<-aictab(cand.set = Can.mod)
aic_out
bic_out<-bictab(cand.set = Can.mod)
bic_out
aic_out<-aictab(cand.set = Can.mod)
aic_out
aic_out<-aictab(cand.set = Can.mod)
aic_out
Can.mod<-list()
Can.mod[[1]]<-lme(FvFm ~ 1, random=list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[2]]<-lme(FvFm ~ Heatload32, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[3]]<-lme(FvFm ~ Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[4]]<-lme(FvFm ~ AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[5]]<-lme(FvFm ~ ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[17]]<-lme(FvFm ~ Heatload32 * Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[18]]<-lme(FvFm ~ Heatload32 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[19]]<-lme(FvFm ~ Heatload32 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[20]]<-lme(FvFm ~ Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[21]]<-lme(FvFm ~ Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[22]]<-lme(FvFm ~ AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[23]]<-lme(FvFm ~ Heatload32 * Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[24]]<-lme(FvFm ~ Heatload32 * Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[25]]<-lme(FvFm ~ Heatload32 * AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[26]]<-lme(FvFm ~ Heatload32*Heatload34*AbsTemp*ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
aic_out<-aictab(cand.set = Can.mod)
aic_out
Can.mod<-list()
Can.mod[[1]]<-lme(FvFm ~ 1, random=list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[2]]<-lme(FvFm ~ Heatload32, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[3]]<-lme(FvFm ~ Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[4]]<-lme(FvFm ~ AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[5]]<-lme(FvFm ~ ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[6]]<-lme(FvFm ~ Heatload32 * Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[7]]<-lme(FvFm ~ Heatload32 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[8]]<-lme(FvFm ~ Heatload32 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[9]]<-lme(FvFm ~ Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[10]]<-lme(FvFm ~ Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[11]]<-lme(FvFm ~ AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[12]]<-lme(FvFm ~ Heatload32 * Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[13]]<-lme(FvFm ~ Heatload32 * Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[14]]<-lme(FvFm ~ Heatload32 * AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[15]]<-lme(FvFm ~ Heatload32*Heatload34*AbsTemp*ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
aic_out<-aictab(cand.set = Can.mod)
aic_out
library(dbplyr)
install.packages("dplyr", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library(dplyr, lib.loc = "/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
setwd("~/Documents/ODU_Post-doc/Writing/KAUST_2019/Heating-Duration-vs-Intensity-vs-RampRate/Figures/Figure 4 and 5")
setwd to source file location
library(car)
library(corrplot)
library(nlme)
library(plyr)
library(MuMIn)
library(sjPlot)
library(tidyr)
library(AICcmodavg)
library(ggplot2)
library(ggpubr)
library(emmeans)
library(drc)
library(ggplot2)
library(Rmisc)
Acr_data<-read.csv("2019_08_KAUST_PAM_prolonged_acropora.csv")
Por_data<-read.csv("2019_08_KAUST_PAM_prolonged_porites.csv")
Acr_data$Day<-as.factor(Acr_data$Day)
Acr_data$Colony<-as.factor(Acr_data$Colony)
Acr_data$Temp<-as.factor(Acr_data$Temp)
Acr_data$Date<-as.factor(Acr_data$Date)
Acr_data$Tank<-as.factor(Acr_data$Tank)
str(Acr_data)
Acr_clean <- subset(Acr_data, select = c(Day, Site, Colony, Population, Ramp, Tank, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Acr_clean <- Acr_clean[complete.cases(Acr_clean),]
Acr_pro <- subset(Acr_clean, Site == "Protected")
Acr_exp <- subset(Acr_clean, Site == "Exposed")
Por_data$Day<-as.factor(Por_data$Day)
Por_data$Colony<-as.factor(Por_data$Colony)
Por_data$Temp<-as.factor(Por_data$Temp)
Por_data$Date<-as.factor(Por_data$Date)
Por_data$Tank<-as.factor(Por_data$Tank)
str(Por_data)
Por_clean <- subset(Por_data, select = c(Day, Site, Colony, Population, Ramp, Tank, FvFm, Heatload32, Heatload33, Heatload34, AbsTemp, ElapsedT))
Por_clean <- Por_clean[complete.cases(Por_clean),]
Por_pro <- subset(Por_clean, Site == "Protected")
Por_exp <- subset(Por_clean, Site == "Exposed")
Full_data<-rbind(Acr_clean,Por_clean)
Predictors <- Full_data[,c(8:12)]
cor_matrix <-cor(Predictors)
corrplot.mixed(cor_matrix, upper = 'pie',lower='number') #remove heaload 33 - near perfect correlation with heatload 32
Main_mod<-nlme::lme(FvFm ~ Heatload32 + Heatload34 + AbsTemp + ElapsedT, random=list(~1|Day,~1|Tank,~1|Colony), data = Full_data, na.action=na.exclude)
summary(Main_mod)
vif.lme <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)] }
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v }
vif.lme(Main_mod) #VIFs all below 3 (acceptable after Neter et al. (1996) and Chatterjee et al. (2000))
Can.mod<-list()
Can.mod[[1]]<-lme(FvFm ~ 1, random=list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[2]]<-lme(FvFm ~ Heatload32, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[3]]<-lme(FvFm ~ Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[4]]<-lme(FvFm ~ AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[5]]<-lme(FvFm ~ ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[6]]<-lme(FvFm ~ Heatload32 * Heatload34, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[7]]<-lme(FvFm ~ Heatload32 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[8]]<-lme(FvFm ~ Heatload32 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[9]]<-lme(FvFm ~ Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[10]]<-lme(FvFm ~ Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[11]]<-lme(FvFm ~ AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[12]]<-lme(FvFm ~ Heatload32 * Heatload34 * AbsTemp, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[13]]<-lme(FvFm ~ Heatload32 * Heatload34 * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[14]]<-lme(FvFm ~ Heatload32 * AbsTemp * ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
Can.mod[[15]]<-lme(FvFm ~ Heatload32*Heatload34*AbsTemp*ElapsedT, random = list(Day=~1, Tank=~1, Colony=~1), data = Full_data, na.action=na.exclude)
aic_out<-aictab(cand.set = Can.mod)
aic_out
summary(Can.mod[[9]]) #best model based on AIC
Acr_exp_slow<-subset(Acr_exp, Ramp=='Control_S' | Ramp=='Slow')
Acr_exp_fast<-subset(Acr_exp, Ramp=='Control_F' | Ramp=='Fast')
Acr_pro_slow<-subset(Acr_pro, Ramp=='Control_S' | Ramp=='Slow')
Acr_pro_fast<-subset(Acr_pro, Ramp=='Control_F' | Ramp=='Fast')
Por_exp_slow<-subset(Por_exp, Ramp=='Control_S' | Ramp=='Slow')
Por_exp_fast<-subset(Por_exp, Ramp=='Control_F' | Ramp=='Fast')
Por_pro_slow<-subset(Por_pro, Ramp=='Control_S' | Ramp=='Slow')
Por_pro_fast<-subset(Por_pro, Ramp=='Control_F' | Ramp=='Fast')
Acr_exp_AbsTemp_slow_1 <- drm(FvFm ~ AbsTemp, data = Acr_exp_slow, fct = LL.3())
summary(Acr_exp_AbsTemp_slow_1)
plot(Acr_exp_AbsTemp_slow_1)
Acr_exp_AbsTemp_fast_1 <- drm(FvFm ~ AbsTemp, data = Acr_exp_fast, fct = LL.3())
summary(Acr_exp_AbsTemp_fast_1)
plot(Acr_exp_AbsTemp_fast_1)
LL.mod1<-drm(FvFm ~ AbsTemp, data = Full_data, fct = LL.3())
LL.mod2<-drm(FvFm ~ Heatload34, data = Full_data, fct = LL.3())
AIC(LL.mod1, LL.mod2)
r.squaredGLMM(LL.mod1)
